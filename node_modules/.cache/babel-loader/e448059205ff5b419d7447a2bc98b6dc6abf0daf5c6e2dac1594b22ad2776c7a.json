{"ast":null,"code":"import axios from 'axios';\n\n// axios instance for making requests \nconst axiosInstance = axios.create();\n\n// request interceptor for adding token\naxiosInstance.interceptors.request.use(config => {\n  // add token to request headers\n  config.baseURL = 'http://localhost:4000';\n  //   config.headers = Object.assign({\n  //     Authorization: `${localStorage.getItem('accessToken')}`\n  //   }, config.headers)\n  return config;\n});\n\n// axiosInstance.interceptors.response.use( (response)=>{ \n//   return response\n// },( err )=>{\n//  if(err.response.status === 401){\n//    localStorage.clear();\n//    if(window.location.pathname !== '/login'){\n//      window.location = '/login'\n//    }\n//  }\n\n//  return Promise.reject(err)\n// } )\n\nexport default axios;","map":{"version":3,"names":["axios","axiosInstance","create","interceptors","request","use","config","baseURL"],"sources":["C:/BROCAMP/marlochennai/client/src/config/config.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\n// axios instance for making requests \r\nconst axiosInstance = axios.create();\r\n\r\n// request interceptor for adding token\r\naxiosInstance.interceptors.request.use((config) => {\r\n  // add token to request headers\r\n  config.baseURL = 'http://localhost:4000';\r\n//   config.headers = Object.assign({\r\n//     Authorization: `${localStorage.getItem('accessToken')}`\r\n//   }, config.headers)\r\n  return config;\r\n});\r\n\r\n// axiosInstance.interceptors.response.use( (response)=>{ \r\n//   return response\r\n// },( err )=>{\r\n//  if(err.response.status === 401){\r\n//    localStorage.clear();\r\n//    if(window.location.pathname !== '/login'){\r\n//      window.location = '/login'\r\n//    }\r\n//  }\r\n  \r\n//  return Promise.reject(err)\r\n// } )\r\n\r\nexport default axios;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,EAAE;;AAEpC;AACAD,aAAa,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACjD;EACAA,MAAM,CAACC,OAAO,GAAG,uBAAuB;EAC1C;EACA;EACA;EACE,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAeN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}